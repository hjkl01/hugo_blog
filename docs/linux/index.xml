<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on My Note Site</title>
    <link>https://hjkl01.github.io/linux/</link>
    <description>Recent content in Linux on My Note Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language><atom:link href="https://hjkl01.github.io/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>adb</title>
      <link>https://hjkl01.github.io/linux/adb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjkl01.github.io/linux/adb/</guid>
      <description># adb commands  adb devices #查看连接设备  adb start-server 启动adb 服务，基本不会用到，因为只要设备连接正确，会自动启动adb server  adb kill-server 停止adb server  adb -s cf27456f shell # 指定连接设备使用命令  adb install test.apk # 安装应用  adb install -r demo.apk #安装apk 到sd 卡：  adb uninstall cn.com.test.mobile #卸载应用，需要指定包  adb uninstall -k cn.com.test.mobile #卸载app 但保留数据和缓存文件  adb shell pm list packages #列出手机装的所有app 的包名  adb shell pm list packages -s 列出系统应用的所有包名  adb shell pm list packages -3 #列出除了系统应用的第三方应用包名  adb shell pm clear cn.</description>
    </item>
    
    <item>
      <title>arch</title>
      <link>https://hjkl01.github.io/linux/arch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjkl01.github.io/linux/arch/</guid>
      <description>wiki     https://gitlab.com/drizzt/vps2arch/-/wikis/Tested-VPS-Providers
  ⚠️ 设置root的密码       wget https://tinyurl.com/vps2arch 也会被重定向到以下 url       wget https://gitlab.com/drizzt/vps2arch/-/raw/master/vps2arch   启动脚本       sh ./vps2arch   当你从脚本默认的源下载速度较慢的时候，可以使用 -m 参数指定源，例如        (sudo) sh ./vps2arch -m https://mirrors.neusoft.edu.cn/archlinux/ sync ; reboot -f 使用 ntp     pacman -S ntp timedatectl set-ntp true # 设置时区 ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime hwclock --systohc utf8       编辑 /etc/locale.</description>
    </item>
    
    <item>
      <title>arch pppoe</title>
      <link>https://hjkl01.github.io/linux/arch-pppoe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjkl01.github.io/linux/arch-pppoe/</guid>
      <description>pppoe 拨号     yay -S --noconfirm rp-pppoe  ifconfig # 查看对应的网卡 sudo ifconfig 网卡 down # 停止网卡服务 sudo pppoe-setup # 输入对应的用户名密码等信息 sudo pppoe-start  sudo route delete default sudo route add default ppp0 # ppp0可能是其他名字 ifconfig查看  sudo nvim /etc/resolvconf.conf # 更新name_servers sudo resolvconf -u # 更新DNS </description>
    </item>
    
    <item>
      <title>git &amp;&amp; ssh</title>
      <link>https://hjkl01.github.io/linux/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjkl01.github.io/linux/git/</guid>
      <description>git config     # generate public key git config --global user.name &amp;#34;&amp;#34; git config --global user.email &amp;#34;&amp;#34; ssh-keygen -t rsa -b 4096 -C &amp;#34;&amp;#34;  # git config git config --global http.https://github.com.proxy socks5://127.0.0.1:1080 git config --global https.https://github.com.proxy socks5://127.0.0.1:1080  # or vi ~/.gitconfig [http &amp;#34;https://github.com&amp;#34;] proxy = socks5://127.0.0.1:1080 postBuffer = 524288000 [https &amp;#34;https://github.com&amp;#34;] proxy = socks5://127.0.0.1:1080 postBuffer = 524288000  # git submodule git submodule add https://github.com/liuyib/hexo-theme-stun/ themes/stun git submodule update --remote ssh config     # $HOME/.</description>
    </item>
    
    <item>
      <title>neovim</title>
      <link>https://hjkl01.github.io/linux/neovim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjkl01.github.io/linux/neovim/</guid>
      <description>我的neovim配置      https://github.com/hjkl01/init.vim
 插件     # status/tabline vim-airline/vim-airline Plug &amp;#39;vim-airline/vim-airline&amp;#39; Plug &amp;#39;vim-airline/vim-airline-themes&amp;#39; let g:airline#extensions#tabline#formatter = &amp;#39;default&amp;#39; let g:airline#extensions#tabline#enabled = 1 &amp;#34; let g:airline#extensions#tabline#left_sep = &amp;#39; &amp;#39; &amp;#34; let g:airline#extensions#tabline#left_alt_sep = &amp;#39;|&amp;#39; &amp;#34; let g:airline#extensions#tabline#enabled = 1 &amp;#34; let g:airline#extensions#tabline#tab_nr_type = 1 &amp;#34; tab number &amp;#34; let g:airline#extensions#tabline#show_tab_nr = 1 &amp;#34; let g:airline#extensions#tabline#formatter = &amp;#39;default&amp;#39; &amp;#34; let g:airline#extensions#tabline#buffer_nr_show = 0 &amp;#34; let g:airline#extensions#tabline#fnametruncate = 16 &amp;#34; let g:airline#extensions#tabline#fnamecollapse = 2 &amp;#34; let g:airline#extensions#tabline#buffer_idx_mode = 1 let g:airline_theme=&amp;#39;molokai&amp;#39; # format file Plug &amp;#39;Chiel92/vim-autoformat&amp;#39; &amp;#34; autocmd BufWrite * :Autoformat let g:autoformat_autoindent = 1 let g:autoformat_retab = 1 let g:autoformat_remove_trailing_spaces = 1   # 文件目录  Plug &amp;#39;preservim/nerdtree&amp;#39; let g:NERDTreeWinPos = &amp;#34;right&amp;#34; let NERDTreeShowHidden=1 let NERDTreeShowLineNumbers=1 let NERDTreeIgnore = [&amp;#39;\.</description>
    </item>
    
    <item>
      <title>nginx</title>
      <link>https://hjkl01.github.io/linux/nginx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjkl01.github.io/linux/nginx/</guid>
      <description>推荐在线配置      https://digitalocean.github.io/nginxconfig.io/?global.app.lang=zhCN
 静态文件     server {  listen 80;  listen [::]:80;  server_name blog.viewer.pub;  root /html/github;  location / {  index index.html index.htm;  } } 转发端口     server {  listen 80;  server_name dj.viewer.pub;   root /html/www/;  location / {  proxy_pass http://127.0.0.1:8000/;  } } 重定向     server {  listen 80;  server_name blog.</description>
    </item>
    
    <item>
      <title>npm</title>
      <link>https://hjkl01.github.io/linux/yarn_npm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjkl01.github.io/linux/yarn_npm/</guid>
      <description>yarn/npm 设置国内源     # 临时 npm --registry https://registry.npm.taobao.org install express # 写入文件 yarn config set registry &amp;#39;https://registry.npm.taobao.org&amp;#39; yarn config get registry  npm config set registry https://registry.npm.taobao.org npm config get registry use yrm     npm install -g yrm # yarn global add yrm yrm ls yrm use taobao yrm test </description>
    </item>
    
    <item>
      <title>proxy</title>
      <link>https://hjkl01.github.io/linux/proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjkl01.github.io/linux/proxy/</guid>
      <description>trojan-go     brew install trojan-go  修改 /usr/local/etc/trojan-go/config.json  brew service start trojan-go glider     yay -S glider  glider -listen :1080 -forward trojan://password@ip:443  # with auth glider -listen http://user:user_passwd@:61000 -forward trojan://password@ip:443 trojan     https://github.com/trojan-gfw/trojan ### 机场推荐: https://portal.shadowsocks.nz/aff.php?aff=24252  ### 部署 https://github.com/Jrohy/trojan 旧     server:     install libsodium pip install shadowsocks pip install https://github.com/shadowsocks/shadowsocks/archive/master.zip -U  # path : /etc/shadowsocks.</description>
    </item>
    
    <item>
      <title>remote desktop</title>
      <link>https://hjkl01.github.io/linux/todesk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjkl01.github.io/linux/todesk/</guid>
      <description>arch install todesk     wget https://dl.todesk.com/linux/todesk_2.0.2_x86_64.pkg.tar.zst  sudo pacman -U todesk_2.0.2_x86_64.pkg.tar.zst  sudo systemctl restart todeskd.service 详情参考: https://www.todesk.com/download_detail.html</description>
    </item>
    
    <item>
      <title>samba</title>
      <link>https://hjkl01.github.io/linux/samba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjkl01.github.io/linux/samba/</guid>
      <description>在arch 中安装参考     https://wiki.archlinux.org/title/samba 在ubuntu中安装     sudo apt-get install samba sudo useradd xxx sudo smbpasswd -a xxx sudo vi /etc/samba/smb.conf  #### 配置内加入以下内容 [dev] comment = dev path = /var/dev valid user = xxx write list = xxx create mask = 0664 directory mask = 0775 force user = xxx force group = xxx public = no available = yes browseable = yes security = user ### 重启samba【sudo service smbd restart】 </description>
    </item>
    
    <item>
      <title>socks5 转 http 之 privoxy</title>
      <link>https://hjkl01.github.io/linux/privoxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjkl01.github.io/linux/privoxy/</guid>
      <description>socks5 转 http     privoxy 配置     yay -S privoxy  cd /etc/privoxy  (sudo) mv config config.bak (sudo) vi config  forward-socks5t / 127.0.0.1:1080 . listen-address 127.0.0.1:9888  sudo systemctl restart privoxy.service sudo systemctl enable privoxy.service </description>
    </item>
    
    <item>
      <title>starchart</title>
      <link>https://hjkl01.github.io/linux/starcharts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjkl01.github.io/linux/starcharts/</guid>
      <description>星图     在markdown中的代码:     ![stars](https://starchart.cc/lesssound/pornhub.svg) example:     </description>
    </item>
    
    <item>
      <title>supervisor </title>
      <link>https://hjkl01.github.io/linux/supervisor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjkl01.github.io/linux/supervisor/</guid>
      <description>后缀为conf或ini     [program:frp_ssh]  command = /home/user/frp/frpc -c /home/user/frp/config.ini directory = /home/user/somedir user = user autostart = true autorestart = true startsecs = 3  redirect_stderr = true stdout_logfile_maxbytes = 50MB stdout_logfile_backups = 10 stdout_logfile = /home/user/frp/log </description>
    </item>
    
    <item>
      <title>SwitchyOmega</title>
      <link>https://hjkl01.github.io/linux/switchyomega/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjkl01.github.io/linux/switchyomega/</guid>
      <description>config      SwitchyOmega 访问变慢
关闭chrome的安全dns
Privacy and Security -&amp;gt; Security -&amp;gt; Use Secure DNS
 参考: https://github.com/FelisCatus/SwitchyOmega/issues/1742#issuecomment-826272936</description>
    </item>
    
    <item>
      <title>ubuntu</title>
      <link>https://hjkl01.github.io/linux/ubuntu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjkl01.github.io/linux/ubuntu/</guid>
      <description>中文乱码     sudo apt-get -y install language-pack-zh-hans  #写入 ~/.zshrc: LC_ALL=zh_CN.utf8 export LC_ALL  source ~/.zshrc 配置静态IP     path: `/etc/network/interface`  auto eth1 iface eth1 inet static address 192.168.56.xx netmask 255.255.255.0 network 192.168.56.0 broadcast 192.168.56.255  if possible, 配置路由器中的dhcp. ip route     sudo route add -net 66.1.254.0/24 gw 66.16.62.254 enp4s0 sudo ip addr flush dev enp4s0 安装Ubuntu 分区     efi swap	交换空间 / ext4 /boot	200M左右	ext4	/tmp	5G左右	ext4	手动配置swap内存      sudo fallocate -l 4G /swapfile sudo chmod 600 /swapfile sudo mkswap /swapfile sudo swapon /swapfile  sudo vim /etc/fstab /swapfile none swap sw 0 0 </description>
    </item>
    
    <item>
      <title>vnc</title>
      <link>https://hjkl01.github.io/linux/vnc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hjkl01.github.io/linux/vnc/</guid>
      <description>服务端安装     # ubuntu   sudo apt-get install x11vnc   x11vnc -storepasswd   x11vnc -auth guess -once -loop -noxdamage -repeat -rfbauth ~/.vnc/passwd -rfbport 5900 -shared   x11vnc -forever   https://www.realvnc.com/en/connect/download/viewer/   # arch   yay -S x11vnc net-tools  update -&amp;gt; /etc/gdm/custom.conf:  WaylandEnable=false   x11vnc -wait 50 -noxdamage -passwd PASSWORD -display :0 -forever -o /var/log/x11vnc.log -bg 客户端      https://www.</description>
    </item>
    
  </channel>
</rss>
